{"version":3,"sources":["TypeaheadComponent.js","App.js","reportWebVitals.js","index.js"],"names":["TypeaheadComponent","props","_useState","useState","_useState2","_slicedToArray","singleSelections","setSingleSelections","_useState3","_useState4","setNewCampaignKeywords","useEffect","map","option","name","join","React","createElement","Form","Group","style","marginTop","Typeahead","id","labelKey","onChange","selected","keywords","onKeywordsChange","options","placeholder","inputProps","class","backgroundColor","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_Component","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","accountBalance","sessionStorage","getItem","campaigns","isLoading","parseFloat","newCampaignName","newCampaignKeywords","newCampaignFunds","newCampaignBidAmount","newCampaignTowns","newCampaignRadius","newCampaignPublished","handleKeywordsChange","bind","_assertThisInitialized","_inherits","_createClass","selectedKeywords","setState","_componentDidMount","_asyncToGenerator","_callee","response","body","_context","fetch","json","t0","apply","arguments","_remove","_callee2","updatedCampaigns","_context2","concat","headers","Accept","Content-Type","_toConsumableArray","filter","console","_x","_addCampaign","_callee3","event","_this$state","updatedAccountBalance","_context3","preventDefault","JSON","stringify","funds","bidAmount","towns","radius","published","setItem","_x2","_edit","_callee4","campaignId","newCampaignData","oldCampaign","fundsDiff","_context4","ok","log","campaign","_objectSpread","find","Math","abs","editingCampaignId","_x3","_x4","_this2","_this$state2","campaignsList","toString","onClick","remove","edit","disabled","className","onSubmit","addCampaign","target","checked","variant","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3eacc636.chunk.js","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Typeahead, Menu, MenuItem } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport './App.css';\r\nimport App from './App';\r\n\r\n\r\nfunction TypeaheadComponent(props) {\r\n  const [singleSelections, setSingleSelections] = useState([]);\r\n  const options = [\r\n    { name: 'IT' },\r\n    { name: 'Programowanie' },\r\n    { name: 'Java' },\r\n    { name: 'C#' },\r\n    { name: 'C++' },\r\n    { name: 'JavaScript' },\r\n    { name: 'C' },\r\n    { name: 'Ruby' },\r\n    { name: 'Unity' },\r\n    { name: 'Unreal Engine' },\r\n    { name: 'Arduino' },\r\n    { name: 'PLC' },\r\n    { name: 'Web' },\r\n    { name: 'ReactJS' },\r\n    { name: 'Tech' },\r\n    { name: 'Windows' },\r\n    { name: 'Linux' },\r\n    { name: 'Spring' },\r\n    { name: 'Hibernate' },\r\n    { name: 'Kotlin' },\r\n    { name: 'Android' },\r\n  ];\r\n\r\n  const onKeywordsChange = (selected) => {\r\n    const keywords = selected.map((option) => option.name).join(', ');\r\n    setSingleSelections(selected);\r\n    props.onKeywordsChange(keywords);\r\n  };\r\n\r\n  const [newCampaignKeywords, setNewCampaignKeywords] = useState('');\r\n\r\n  useEffect(() => {\r\n    setNewCampaignKeywords(singleSelections.map((option) => option.name).join(', '));\r\n  }, [singleSelections]);\r\n\r\n  return (\r\n    <Form.Group style={{ marginTop: '20px' }}>\r\n      <Typeahead\r\n        id=\"basic-typeahead-multiple\"\r\n        labelKey=\"name\"\r\n        onChange={onKeywordsChange}\r\n        options={options}\r\n        placeholder=\"Choose keyword\"\r\n        inputProps={{\r\n          class: 'my-custom-classname',\r\n          style: {\r\n            backgroundColor: 'white',\r\n          }\r\n        }}\r\n      />\r\n    </Form.Group>\r\n  );\r\n}\r\nexport default TypeaheadComponent;","import \"./App.css\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; // ES2015\nimport Form from \"react-bootstrap/Form\";\nimport TypeaheadComponent from \"./TypeaheadComponent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const accountBalance = sessionStorage.getItem(\"accountBalance\") || 50000;\n    this.state = {\n      campaigns: [],\n      isLoading: true,\n      accountBalance: parseFloat(accountBalance),\n      newCampaignName: \"\",\n      newCampaignKeywords: \"\",\n      newCampaignFunds: \"\",\n      newCampaignBidAmount: \"\",\n      newCampaignTowns: \"\",\n      newCampaignRadius: \"\",\n      newCampaignPublished: true,\n      error: null,\n    };\n    this.handleKeywordsChange = this.handleKeywordsChange.bind(this);\n  }\n  handleKeywordsChange(selectedKeywords) {\n    this.setState({ newCampaignKeywords: selectedKeywords });\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\"http://localhost:8091/api/baza\");\n      const body = await response.json();\n      this.setState({ campaigns: body, isLoading: false });\n    } catch (error) {\n      this.setState({\n        error: \"Nie udało się pobrać kampanii\",\n        isLoading: false,\n      });\n    }\n  }\n  async remove(id) {\n    try {\n      await fetch(`http://localhost:8091/api/baza/published/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      let updatedCampaigns = [...this.state.campaigns].filter(\n        (i) => i.id !== id\n      );\n      this.setState({ campaigns: updatedCampaigns });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  handleKeywordsChange(keywords) {\n    this.setState({ newCampaignKeywords: keywords });\n  }\n\n  async addCampaign(event) {\n    event.preventDefault();\n    const {\n      newCampaignName,\n      newCampaignKeywords,\n      newCampaignFunds,\n      newCampaignBidAmount,\n      newCampaignTowns,\n      newCampaignRadius,\n      newCampaignPublished,\n      accountBalance, // get the current account balance\n    } = this.state;\n    if (isNaN(newCampaignFunds) || newCampaignFunds <= 0) {\n      console.error(\"Invalid campaign cost\");\n      return;\n    }\n    if (newCampaignFunds > accountBalance) {\n      console.error(\"Insufficient funds\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8091/api/baza\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: newCampaignName,\n          keywords: newCampaignKeywords,\n          funds: newCampaignFunds,\n          bidAmount: newCampaignBidAmount,\n          towns: newCampaignTowns,\n          radius: newCampaignRadius,\n          published: newCampaignPublished,\n        }),\n      });\n      const body = await response.json();\n      let updatedCampaigns = [...this.state.campaigns, body];\n      let updatedAccountBalance = accountBalance - newCampaignFunds; // update the account balance\n      this.setState({\n        campaigns: updatedCampaigns,\n        newCampaignName: \"\",\n        newCampaignKeywords: \"\",\n        newCampaignFunds: \"\",\n        newCampaignBidAmount: \"\",\n        newCampaignTowns: \"\",\n        newCampaignRadius: \"\",\n        newCampaignPublished: true,\n        accountBalance: updatedAccountBalance, // update the state variable for account balance\n      });\n      sessionStorage.setItem(\"accountBalance\", updatedAccountBalance);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async edit(campaignId, newCampaignData) {\n    try {\n      const response = await fetch(\n        `http://localhost:8091/api/baza/${campaignId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newCampaignData),\n        }\n      );\n\n      if (response.ok) {\n        console.log(\"Editing campaign:\", campaignId);\n        const updatedCampaigns = this.state.campaigns.map((campaign) => {\n          if (campaign.id === campaignId) {\n            return { ...campaign, ...newCampaignData };\n          } else {\n            return campaign;\n          }\n        });\n        const oldCampaign = this.state.campaigns.find(\n          (campaign) => campaign.id === campaignId\n        );\n        const fundsDiff = newCampaignData.funds - oldCampaign.funds; // difference between old funds and new funds\n        let updatedAccountBalance;\n        if (fundsDiff >= 0) {\n          updatedAccountBalance = this.state.accountBalance - fundsDiff; // subtract only the difference from the account balance\n        } else {\n          updatedAccountBalance =\n            this.state.accountBalance + Math.abs(fundsDiff); // add the absolute value of the difference to the account balance\n        }\n        this.setState({\n          campaigns: updatedCampaigns,\n          editingCampaignId: null,\n          accountBalance: updatedAccountBalance, // update the state variable for account balance\n        });\n        sessionStorage.setItem(\"accountBalance\", updatedAccountBalance);\n      }\n    } catch (error) {\n      console.log(\"Nie udalo sie edytowac kampanii\", campaignId);\n      console.error(error);\n    }\n  }\n\n  render() {\n    const {\n      campaigns,\n      isLoading,\n      newCampaignName,\n      newCampaignKeywords,\n      newCampaignFunds,\n      newCampaignBidAmount,\n      newCampaignTowns,\n      newCampaignRadius,\n      newCampaignPublished,\n      accountBalance,\n    } = this.state;\n\n    const campaignsList = campaigns.map((campaign) => {\n      const handleEdit = () => {\n        const newCampaignData = {\n          name: newCampaignName,\n          keywords: newCampaignKeywords,\n          funds: newCampaignFunds,\n          bidAmount: newCampaignBidAmount,\n          towns: newCampaignTowns,\n          radius: newCampaignRadius,\n          published: newCampaignPublished,\n        };\n        this.edit(campaign.id, newCampaignData);\n      };\n\n      return (\n        <div id=\"campaign-info\" key={campaign.id}>\n          <ul id=\"campaign-data\">\n            <dl>Bid Amount: {campaign.bidAmount}</dl>\n            <dl>Funds: {campaign.funds} </dl>\n            <dl>Keyword: {campaign.keywords} </dl>\n            <dl>Campaign name: {campaign.name} </dl>\n            <dl>\n              Published:{\" \"}\n              {campaign.published && `${campaign.published.toString()}`}{\" \"}\n              {!campaign.published && `${campaign.published.toString()}`}{\" \"}\n            </dl>\n            <dl>Radius: {campaign.radius} kilometers </dl>\n            <dl>Town: {campaign.towns}</dl>\n          </ul>\n          <button id=\"delete-btn\" onClick={() => this.remove(campaign.id)}>\n            Delete\n          </button>\n          <button\n            id=\"edit-btn\"\n            type=\"submit\"\n            onClick={handleEdit}\n            disabled={\n              // add campaign btn works only when the values are not null and bidAmount > 499\n              this.state.newCampaignFunds < 1 ||\n              this.state.newCampaignFunds > accountBalance ||\n              !this.state.newCampaignName ||\n              !this.state.newCampaignKeywords ||\n              this.state.newCampaignBidAmount < 499 ||\n              !this.state.newCampaignTowns ||\n              this.state.newCampaignRadius < 0\n            }\n          >\n            Edit with data below\n          </button>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Campaigns</h1>\n          <h3>Account balance: {accountBalance}</h3>\n          <div id=\"inputs-container\" className=\"App-intro\">\n            {campaignsList}\n            <div id=\"info\">\n              <p>\n                Below are the fields which you can use to add new campaigns or\n                update existing ones.\n              </p>\n              <p>Inputs cannot be null. Minimum bid amount is 500.</p>\n            </div>\n            <form id=\"form-input\" onSubmit={(event) => this.addCampaign(event)}>\n              <input\n                id=\"input\"\n                type=\"text\"\n                value={newCampaignName}\n                onChange={(event) =>\n                  this.setState({ newCampaignName: event.target.value })\n                }\n                placeholder=\"Name\"\n              />\n              <input\n                id=\"input\"\n                type=\"number\"\n                value={newCampaignFunds}\n                onChange={(event) =>\n                  this.setState({ newCampaignFunds: event.target.value })\n                }\n                placeholder=\"Funds\"\n              />\n              <input\n                id=\"input\"\n                type=\"number\"\n                value={newCampaignBidAmount}\n                onChange={(event) =>\n                  this.setState({ newCampaignBidAmount: event.target.value })\n                }\n                placeholder=\"Bid amount\"\n              />\n              <select\n                id=\"input\"\n                type=\"text\"\n                //name =\"towns\"\n                value={newCampaignTowns}\n                onChange={(event) =>\n                  this.setState({ newCampaignTowns: event.target.value })\n                }\n              >\n                <option>Choose</option>\n                <option value=\"Warsaw\">Warsaw</option>\n                <option value=\"Kraków\">Kraków</option>\n                <option value=\"Kielce\">Kielce</option>\n                <option value=\"Gdańsk\">Gdańsk</option>\n                <option value=\"Poznań\">Poznań</option>\n                <option value=\"Radom\">Radom</option>\n                <option value=\"Katowice\">Katowice</option>\n                <option value=\"Szczecin\">Szczecin</option>\n              </select>\n              <input\n                id=\"input\"\n                type=\"number\"\n                value={newCampaignRadius}\n                onChange={(event) =>\n                  this.setState({ newCampaignRadius: event.target.value })\n                }\n                placeholder=\"Radius [km]\"\n              />\n              <label>\n                <input\n                  id=\"checkbox\"\n                  type=\"checkbox\"\n                  checked={newCampaignPublished}\n                  onChange={(event) =>\n                    this.setState({\n                      newCampaignPublished: event.target.checked,\n                    })\n                  }\n                />\n                Published\n              </label>\n              <TypeaheadComponent\n                onKeywordsChange={this.handleKeywordsChange}\n              />\n              <button\n                variant=\"primary\"\n                id=\"add-btn\"\n                type=\"submit\"\n                disabled={\n                  // add campaign btn works only when the values are not null and bidAmount > 499\n                  !this.state.newCampaignName ||\n                  this.state.newCampaignFunds < 1 ||\n                  !this.state.newCampaignKeywords ||\n                  this.state.newCampaignBidAmount < 499 ||\n                  !this.state.newCampaignTowns ||\n                  this.state.newCampaignRadius < 0\n                }\n              >\n                Add Campaign\n              </button>\n            </form>\n          </div>\n          <div id=\"footer\">\n            <p>Autor: Jakub Konior</p>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}